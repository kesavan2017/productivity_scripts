#! /bin/sh
# Kesavan Narayan
# March 29th, 2017
# JIRA More Time Coding Priority
# Project Component cleanup Script / Audit Components in a JIRA Project
stty intr "^C"                                                                  #Make CTRL-C the interrupt key
stty intr "^Z"                                                                  #Make CTRL-Z the stop key

interr ()                                                                       #Function to exit Script
{
    echo "exiting script"
    sleep 2
    clean_up
    exit
}

suspend ()                                                                      #Function to stop script
{
    echo "stopping script"
    sleep 2
    clean_up
}

cleanup ()                                                                      #Function to remove unwanted files + directory that may be generated by script
{
  rm *tmp.json 2> /dev/null
  echo "**removed tmp files / cleanup completed**"

}

call_jira_rest_api ()                                                           #Function to make the JIRA REST Api requests
{
  curl -X GET -H "Authorization: Basic xyz=" -H "Content-Type: application/json" https://[jiraurl]/rest/api/2/project/[project_key]/components >> latest_components_tmp.json
}

post_process_jira_response ()                                                   #Function to process JIRA rest JSON response
{
  jq '.' latest_components_tmp.json >> latest_clean_components_tmp.json
  jq '.[] | {name: .name, }' latest_clean_components_tmp.json >> latest_clean_componentnames_tmp.json
  jq '.[] | {name: .name, lead: .lead.displayName}' latest_clean_components_tmp.json >> latest_clean_componentnames_and_default_owners.json         #[TODO - testing] Added enhancement to extrack Component & Default Owner for audit of both

}

build_archive_components_files ()
{
  time_stamp=`date "+%Y%m%d_%H%M%S"`                                            #Variable for timestamp
  touch "./component_archives/components_diff_archive.$time_stamp"              #Create empty file w correct timestamp nomenclature
  diff ./[project_key]_clean_componentlist_baseline04282017.json ./latest_clean_componentnames_tmp.json >> ./component_archives/components_diff_archive.$time_stamp
  cp latest_clean_componentnames_tmp.json ./component_archives/components_asof_$time_stamp      #Copy tmp file of latest components list to a time stampped archive file
  added_components_from_baseline=`grep '^>.*name' ./component_archives/*$time_stamp | wc -l`    #Obtain number of new components added from diff output
  removed_components_from_baseline=`grep '^<.*name' ./component_archives/*$time_stamp | wc -l`  #Obtain number of components removed from baseline set of components as of current component liset
}

compute_component_audits ()                                                     #
{
  componentsbaseline=`grep name ./[project_key]_clean_componentlist_baseline04282017.json | wc -l`        #Obtain number of components in baseline TODO - parameterize baseline file name
  componentscurrent=`grep name ./latest_clean_componentnames_tmp.json | wc -l`                  #Obtain number of componens latest
}

print_audit_outcomes ()                                                         #Function for printing outcomes to std out or to a file perhaps
{
  echo "****************[project_key]JIRA Project audit summary: $time_stamp***************************"
  echo "Number of Components In Baseline:$componentsbaseline" "Number of Components Currently:$componentscurrent"
  echo "Number of Components Added from Baseline: $added_components_from_baseline"
  echo "Number of Components Removed from Baseline: $removed_components_from_baseline"
  echo "****************[project_key] JIRA Project audit summary: $time_stamp***************************"
}

call_jira_rest_api                        #Call function to make JIRA REST API CAll
post_process_jira_response                #Call function to post process resposne
build_archive_components_files            #Call function to conduct archive process and generate files
compute_component_audits                  #Call function to conduct the audit via diff utility
print_audit_outcomes
#cleanup                                   #Call cleanup function to remove any tem directories or files used for script that's not required
